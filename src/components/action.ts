"use server";

import { GoogleGenerativeAI } from "@google/generative-ai";
import { Content } from "@google/generative-ai";
import { diaryTypemock } from "./chatBot/chatBot";
// import { diaryType } from "./page";

const genAI = new GoogleGenerativeAI(process.env.GEMINI_API_KEY!);

const model = genAI.getGenerativeModel({
  model: "gemini-2.0-flash",
  systemInstruction: `–¢–∞ –±–æ–ª ”©—Å–≤”©—Ä –Ω–∞—Å–Ω—ã —Ö“Ø“Ø—Ö–¥–∏–π–Ω –¥–æ—Ç–Ω–æ –Ω–∞–π–∑ —à–∏–≥ AI –¥–∞—Å–≥–∞–ª–∂—É—É–ª–∞–≥—á.
    –•–∞—Ä–∏—É–ª—Ç–∞–∞ —Ö—ç—Ç —É—Ä—Ç –±–∏—à, 2-3 ”©–≥“Ø“Ø–ª–±—ç—Ä—Ç –±–∞–≥—Ç–∞–∞.
    –≠–Ω–≥–∏–π–Ω —è—Ä–∏–∞–Ω—ã —Ö—ç–ª–ª—ç–≥ —Ö—ç—Ä—ç–≥–ª—ç ('—ë–æ–æ', '–∞–∞ —Ç–∏–π–º —à“Ø“Ø' –≥—ç—Ö –º—ç—Ç).
    –°—ç—Ç–≥—ç–ª –∑“Ø–π—á —à–∏–≥ –±–∏—à, –Ω–∞–π–∑ —à–∏–≥ –æ–π–ª–≥–æ–∂ –±–∞–π–≥–∞–∞–≥–∞–∞ —Ö–∞—Ä—É—É–ª.
    –ó–∞—Ä–∏–º–¥–∞–∞ –±–æ–≥–∏–Ω–æ –∞—Å—É—É–ª—Ç –∞—Å—É—É, —ç—Å–≤—ç–ª –¥—ç–º–∂–ª—ç–≥–∏–π–Ω –º–µ—Å—Å–µ–∂ “Ø–ª–¥—ç—ç.
    –Ø—Ä–∏–∞–Ω—ã ”©–Ω–≥”© –¥—É–ª–∞–∞–Ω, —ç–Ω–≥–∏–π–Ω, –Ω–∞–π–∑ —à–∏–≥ –±–∞–π—Ö —ë—Å—Ç–æ–π.
    –•“Ø“Ø—Ö–¥–∏–π–≥ –∞–π–¥–∞—Å–≥“Ø–π, —Ç–∞–π–≤–∞–Ω, —ç—Ä–≥—ç—Ü“Ø“Ø–ª–∂ –±–æ–¥–æ—Ö–æ–¥ —Ç—É—Å–∞–ª.

    // –î–∞—Å–≥–∞–ª—ã–≥ —Å–∞–Ω–∞–ª –±–æ–ª–≥–æ—Ö –∑–∞–∞–≤–∞—Ä—á–∏–ª–≥–∞–∞:
    // –•—ç—Ä–≤—ç—ç —è—Ä–∏–∞–Ω—ã —è–≤—Ü–∞–¥ —Ö“Ø“Ø—Ö—ç–¥ '–°–¢–†–ï–°–°–¢–≠–ô' —ç—Å–≤—ç–ª '–ì–£–ù–ò–ì–¢–ê–ô' –±–∞–π–≥–∞–∞ –Ω—å –∏–ª—ç—Ä–≤—ç–ª —Ö–∞—Ä–∏—É–ª—Ç—ã–Ω—Ö–∞–∞ —Ç”©–≥—Å–≥”©–ª–¥ '[BREATHE_SUGGESTION]' –≥—ç—Å—ç–Ω —Ç—ç–º–¥—ç–≥ –Ω—ç–º—ç—ç—Ä—ç–π.

    // –®–∏–Ω—ç –∑–∞–∞–≤–∞—Ä—á–∏–ª–≥–∞–∞:
    // –Ø—Ä–∏–∞–≥ “Ø—Ä–≥—ç–ª–∂–ª“Ø“Ø–ª—ç—Ö–∏–π–Ω —Ç—É–ª–¥ “Ø—Ä–≥—ç–ª–∂ –∞—Å—É—É–ª—Ç –∞—Å—É—É—Ö —à–∞–∞—Ä–¥–ª–∞–≥–∞–≥“Ø–π.
    // –•–∞—Ä–∏–Ω —á –∑”©–≤–ª”©–≥”©”©, –¥—ç–º–∂–ª—ç–≥, —ç—Å–≤—ç–ª –Ω—ç–º—ç–ª—Ç –º—ç–¥—ç—ç–ª—ç–ª ”©–≥—á —è—Ä–∏–∞–≥ —á–∏–≥–ª“Ø“Ø–ª.
    // –•—ç—Ä—ç–≤ –∞—Å—É—É–ª—Ç –∞—Å—É—É—Ö —à–∞–∞—Ä–¥–ª–∞–≥–∞—Ç–∞–π –±–æ–ª, –±–æ–≥–∏–Ω–æ, —ç–Ω–≥–∏–π–Ω –±–∞–π—Ö —ë—Å—Ç–æ–π.
    `,
  generationConfig: {
    maxOutputTokens: 150, // 2‚Äì3 ”©–≥“Ø“Ø–ª–±—ç—Ä—ç—ç –±“Ø—Ä—ç–Ω –±–∞–≥—Ç–∞–∞—Ö–∞–¥ —Ö–∞–Ω–≥–∞–ª—Ç—Ç–∞–π
    temperature: 0.3, // —Ç–æ–≥—Ç–≤–æ—Ä—Ç–æ–π, —Ö—ç—Ç –Ω—É—Ä—à—É—É –±–∏—à
    stopSequences: ["\n"], // –º”©—Ä —à–∏–Ω—ç—á–ª—ç–≥–¥—ç—Ö—ç–¥ —Ç–∞—Å–ª–∞—Ö
  },
});

// –•“Ø“Ø—Ö–¥–∏–π–Ω ”©–¥—Ä–∏–π–Ω —Ç—ç–º–¥—ç–≥–ª—ç–ª –±–æ–ª–æ–Ω JSON –∞–Ω–∞–ª–∏–∑

interface AiResponse {
  text: string;
  triggerExercise?: boolean;
  diaryData?: diaryTypemock;
  endChat?: boolean;
}

export async function sendMessage(
  userMessage: string,
  history: Content[],
  diaryData: diaryTypemock
): Promise<AiResponse | string> {
  try {
    // –Ø—Ä–∏–∞–≥ —ç—Ö–ª“Ø“Ø–ª—ç—Ö—ç–¥, —Ö—ç—Ä—ç–≥–ª—ç–≥—á–∏–π–Ω –º–µ—Å—Å–µ–∂ —é—É –±–∞–π—Ö–∞–∞—Å “Ø–ª —Ö–∞–º–∞–∞—Ä–∞–Ω —Ç—ç–º–¥—ç–≥–ª—ç–ª –¥—ç—ç—Ä “Ø–Ω–¥—ç—Å–ª—ç–Ω —Ö–∞—Ä–∏—É–ª—Ç ”©–≥–Ω”©.
    // –°”©—Ä”©–≥ –º—ç–¥—Ä—ç–º–∂“Ø“Ø–¥–∏–π–Ω –∂–∞–≥—Å–∞–∞–ª—Ç
    const negativeKeywords = /(–°–¢–†–ï–°–°–¢–≠–ô|–£–£–†–¢–ê–ô|–ì–£–ù–ò–ì–¢–ê–ô)/i;

    if (history.length === 0) {
      const chat = model.startChat({ history: [] });

      const result = await chat.sendMessage(`
”®–¥—Ä–∏–π–Ω —Ç—ç–º–¥—ç–≥–ª—ç–ª: "${diaryData.note}"

–≠–Ω—ç —Ç—ç–º–¥—ç–≥–ª—ç–ª–∏–π–≥ —É–Ω—à–∞–∞–¥, —ç–Ω–≥–∏–π–Ω, –Ω–∞–π–∑ —à–∏–≥ –¥—ç–º–∂—Å—ç–Ω “Ø–≥—ç—ç—Ä —Ö–∞—Ä–∏—É–ª—Ç ”©–≥.
–ì—ç—Ö–¥—ç—ç:
- –•—ç—Ä—ç–≤ —Ç—ç–º–¥—ç–≥–ª—ç–ª–¥ "${diaryData.analysis.emotions}" –¥–æ—Ç–æ—Ä '–°–¢–†–ï–°–°–¢–≠–ô', '–£–£–†–¢–ê–ô' —ç—Å–≤—ç–ª '–ì–£–ù–ò–ì–¢–ê–ô' –≥—ç—Å—ç–Ω —Å”©—Ä”©–≥ –º—ç–¥—Ä—ç–º–∂ –±–∞–π–≥–∞–∞ –±–æ–ª
—Ö–∞—Ä–∏—É–ª—Ç—ã–Ω—Ö–∞–∞ —Ç”©–≥—Å–≥”©–ª–¥ —è–≥ —ç–Ω—ç —Ç—ç–º–¥—ç–≥–ª—ç–≥—ç—ç–≥ –Ω—ç–º—ç—ç—Ä—ç–π: [BREATHE_SUGGESTION]
- –ë—É—Å–∞–¥ “Ø–µ–¥ –º–∞—Ä–∫–µ—Ä –Ω—ç–º—ç—Ö —Ö—ç—Ä—ç–≥–≥“Ø–π.
`);

      const text = result.response.text();
      console.log("text chatbot", text);

      // ‚úÖ Marker —à–∞–ª–≥–∞—Ö
      const hasMarker = text.includes("[BREATHE_SUGGESTION]");

      // ‚úÖ Regex —à–∞–ª–≥–∞—Ö
      const hasNegativeEmotion =
        negativeKeywords.test(diaryData.note) ||
        diaryData.analysis.emotions.some((e) =>
          /(–°–¢–†–ï–°–°–¢–≠–ô|–£–£–†–¢–ê–ô|–ì–£–ù–ò–ì–¢–ê–ô)/i.test(e)
        );

      if (hasMarker || hasNegativeEmotion) {
        const cleanedText = text.replace("[BREATHE_SUGGESTION]", "").trim();
        return {
          text:
            cleanedText +
            " –•—ç—Ä—ç–≤ —Ö“Ø—Å–≤—ç–ª —Ö–∞–º—Ç–¥–∞–∞ –∞–º—å—Å–≥–∞–ª—ã–Ω –∂–∏–∂–∏–≥ –¥–∞—Å–≥–∞–ª —Ö–∏–π–∂ –±–æ–ª–æ—Ö —à“Ø“Ø. '–¥–∞—Å–≥–∞–ª —Ö–∏–π–µ' –≥—ç–∂ –±–∏—á—ç—ç—Ä—ç–π ‚ú®",
          triggerExercise: false,
        };
      } else {
        return {
          text: text,
          triggerExercise: false,
        };
      }
    }

    console.log("history", history);

    if (
      userMessage.toLowerCase().includes("–±–∞—è—Ä–ª–∞–ª–∞–∞") ||
      userMessage.toLowerCase().includes("–¥—É—É—Å–≥–∞—è") ||
      userMessage.toLowerCase().includes("–±–∞—è—Ä—Ç–∞–π") ||
      userMessage.toLowerCase().includes("bayrtai")
    ) {
      return {
        text: "–Ø—Ä—å—Å–∞–Ω–¥ –±–∞—è—Ä–ª–∞–ª–∞–∞. –ë–∏ –¥–∞—Ä–∞–∞–≥–∏–π–Ω —É–¥–∞–∞ —Ç—É—Å–ª–∞—Ö–∞–¥ –±—ç–ª—ç–Ω –±–∞–π–Ω–∞ —à“Ø“Ø.üíóüíó",
        endChat: true,
      };
    }

    // –•—ç—Ä—ç–≥–ª—ç–≥—á –¥–∞—Å–≥–∞–ª —Ö–∏–π—Ö–∏–π–≥ –∑”©–≤—à”©”©—Ä”©—Ö”©–¥
    if (
      userMessage.toLowerCase().includes("–¥–∞—Å–≥–∞–ª —Ö–∏–π–µ") ||
      userMessage.toLowerCase().includes("dasgal hiiy")
    ) {
      return {
        text: "–ó–∞, —Å–∞–π–Ω –±–∞–π–Ω–∞. –ê–º—å—Å–≥–∞–ª—ã–Ω –¥–∞—Å–≥–∞–ª—ã–≥ —ç—Ö–ª“Ø“Ø–ª—å–µ.üå¨",
        triggerExercise: true,
      };
    }

    // –•—ç—Ä—ç–≥–ª—ç–≥—á –¥–∞—Å–≥–∞–ª —Ö–∏–π–∂ –¥—É—É—Å–∞—Ö–∞–¥
    if (
      userMessage.toLowerCase().includes("–∞–º—å—Å–≥–∞–ª—ã–Ω –¥–∞—Å–≥–∞–ª—ã–≥ —Ö–∏–π–∂ –¥—É—É—Å–ª–∞–∞.")
    ) {
      const chat = model.startChat({ history });
      const prompt = `–ì–æ—ë –±–∞–π–Ω–∞! üëè –ê–º—å—Å–≥–∞–ª—ã–Ω –¥–∞—Å–≥–∞–ª —Ö–∏–π—Å–Ω–∏–π –¥–∞—Ä–∞–∞ ”©”©—Ä–∏–π–≥”©”© —è–º–∞—Ä –º—ç–¥—ç—Ä—á –±–∞–π–Ω–∞?`;

      const result = await chat.sendMessage(prompt);
      const text = result.response.text();

      return {
        text: text,
        triggerExercise: false,
      };
    }

    // –ë—É—Å–∞–¥ –µ—Ä”©–Ω—Ö–∏–π —Ö–∞—Ä–∏–ª—Ü–∞–Ω —è—Ä–∏–∞
    const chat = model.startChat({ history });
    const result = await chat.sendMessage(userMessage);
    const text = result.response.text();

    return {
      text: text,
      triggerExercise: false,
    };
  } catch (error) {
    console.error("AI-–∞–∞—Å —Ö–∞—Ä–∏—É –∞–≤–∞—Ö–∞–¥ –∞–ª–¥–∞–∞ –≥–∞—Ä–ª–∞–∞:", error);
    return {
      text: "–£—É—á–ª–∞–∞—Ä–∞–π, –æ–¥–æ–æ–≥–æ–æ—Ä —Ö–∞—Ä–∏—É ”©–≥”©—Ö –±–æ–ª–æ–º–∂–≥“Ø–π –±–∞–π–Ω–∞.ü§í",
      triggerExercise: false,
    };
  }
}
